<template>
	<view class="detail">
		<swiper :skip-hidden-item-layout="true" :disable-programmatic-animation="true" :circular="false"
			class="swipers swiper-slide" @change="change" :current="current" :vertical="true" :indicator-dots="false"
			:autoplay="false" :interval="1000" :duration="600">
			<swiper-item class="swipers-item" v-for="(item,index) in swiperList" :key="item.courseDetailsId">
				<view class="swipers-items " v-if="current === index">
					<!--#ifdef APP-PLUS-NVUE -->
					<!-- 视频 -->
					<video v-if="item.isvip==0" :play-strategy="2" :show-loading="true"
						:object-fit="data.video_frame" codec="software" :muted="false" :show-center-play-btn="true" :loop="true" @ended="ended"
						:enable-progress-gesture="false" :poster="item.titleImg" :ref="'myVideo'+item.courseDetailsId"
						:id="'myVideo'+item.courseDetailsId" :src="item.videoUrl" :autoplay="item.autoPlay"
						class="swipers-items-video">
					</video>
					<!--#endif-->
					<!--#ifdef H5 -->
					<view v-if="item.isvip==0" style="margin-top: -100rpx;">
						<div :style="{height:height + 'px'}" class="video" id="SycPlayer"></div>
					</view>
					<!--#endif-->
						<!--  video的object-fit标签说明：包含：contain，填充：fill，覆盖：cover   根据情况使用  -->
					<image v-else @click="item.isvip==1?openPay():''"
						:src="item.isvip==0?item.titleImg:'../../static/video/vip.jpg'" class="swipers-items-imgsbg"
						mode="aspectFill">
					</image>
					<!--#ifdef APP-PLUS -->
					<!-- 返回图标 -->
					<image src="../../static/video/back.png" @click="goBack()" class="swipers-items-back" mode="">
					</image>
					<!--#endif-->
					<!-- 右边操作 -->
					<view class="swipers-items-right" :style="rightTop">
						<view class="swipers-items-right-item">
							<view class="swipers-items-right-item-img" @click.stop="taplike(item)">
								<image v-if="!isdianzan" class="swipers-items-right-item-imgs"
									src="../../static/video/aixin.png" mode=""></image>
								<image v-else class="swipers-items-right-item-imgs" src="../../static/video/aixins.png"
									mode=""></image>
							</view>
							<view class="swipers-items-right-item-txt">
								<text class="swipers-items-right-item-txts">
									{{item.like}}
								</text>
							</view>
						</view>
						<view class="swipers-items-right-item" @click="opencomment(item)">
							<view class="swipers-items-right-item-img">
								<image class="swipers-items-right-item-imgs" src="../../static/video/pl.png" mode="">
								</image>
							</view>
							<view class="swipers-items-right-item-txt">
								<text class="swipers-items-right-item-txts">
									{{commentnum}}
								</text>
							</view>
						</view>

						<view class="swipers-items-right-item" v-if="!isfollow">
							<view class="swipers-items-right-item-img" @click.stop="tapfollow(item)">
								<image class="swipers-items-right-item-imgs" src="../../static/video/zhuijua.png"
									mode=""></image>
							</view>
							<view class="swipers-items-right-item-txt">
								<text class="swipers-items-right-item-txts">
									追剧
								</text>
							</view>
						</view>
						<view class="swipers-items-right-item" v-else>
							<view class="swipers-items-right-item-img" @click.stop="tapfollow(item)">
								<image class="swipers-items-right-item-imgs" src=".../../static/video/zhuijub.png"
									mode=""></image>
							</view>
							<view class="swipers-items-right-item-txt">
								<text class="swipers-items-right-item-txts">
									已追
								</text>
							</view>
						</view>
						<!--#ifndef H5 -->
						<view class="swipers-items-right-item" @click="Share()">
							<view class="swipers-items-right-item-img">
								<image class="swipers-items-right-item-imgs" src="../../static/video/shares.png"
									mode=""></image>
							</view>
							<view class="swipers-items-right-item-txt">
								<text class="swipers-items-right-item-txts">
									分享
								</text>
							</view>
						</view>
						<!--#endif-->
					</view>
					<!-- 底部视频信息 -->
					<view class="swipers-items-btom">
						<view class="swipers-items-btom-box">
							<!-- 标题 -->
							<view class="swipers-items-btom-box-title">
								<text style="font-weight: 700;font-size: 35rpx;" class="swipers-items-btom-box-titles">
									@{{item.courseDetailsName}}
								</text>
							</view>
							<!-- 介绍 -->
							<view v-if="item.content" class="swipers-items-btom-box-content">
								<text style="font-weight: 400;font-size: 25rpx;"
									class="swipers-items-btom-box-contents">{{item.content}}</text>
							</view>
							<!-- 集数 -->
							<view @click="openShow()"
								style="background-color: rgba(0,0,0,0.1);padding: 25rpx 15rpx;border-radius: 5rpx;flex-direction: row;"
								class="swipers-items-btom-box-num">
								<text class="swipers-items-btom-box-nums iconfont"
									style="font-size: 30rpx;font-weight: 700;">
									第{{item.num}}集（共{{!backnum?meunList.length:videoList.length}}集）选集
								</text>
								<image class="xuanjiimg" src="../../static/video/selectv.png"></image>
							</view>
						</view>
					</view>
				</view>

				<!--付费-->
				<view class="swipers-items" v-else>
					<view @click="item.isvip==1?openPay():''" style="margin-top: 205rpx;" class="swipers-items-imgsbg">
						本集为付费视频</view>
					<!-- 返回图标 -->
					<image src="../../static/video/back.png" @click="goBack()" class="swipers-items-back" mode="">
					</image>
					<!-- 右边操作 -->
					<view class="swipers-items-right" :style="rightTop">
						<view class="swipers-items-right-item">
							<view class="swipers-items-right-item-img" @click.stop="taplike(item)">
								<image v-if="!isdianzan" class="swipers-items-right-item-imgs"
									src="../../static/video/aixin.png" mode=""></image>
								<image v-else class="swipers-items-right-item-imgs" src="../../static/video/aixins.png"
									mode=""></image>
							</view>
							<view class="swipers-items-right-item-txt">
								<text class="swipers-items-right-item-txts">
									{{item.like}}
								</text>
							</view>
						</view>
						<view class="swipers-items-right-item" @click="opencomment(item)">
							<view class="swipers-items-right-item-img">
								<image class="swipers-items-right-item-imgs" src="../../static/video/pl.png" mode="">
								</image>
							</view>
							<view class="swipers-items-right-item-txt">
								<text class="swipers-items-right-item-txts">
									{{commentnum}}
								</text>
							</view>
						</view>
						<view class="swipers-items-right-item" v-if="!isfollow">
							<view class="swipers-items-right-item-img" @click.stop="tapfollow(item)">
								<image class="swipers-items-right-item-imgs" src="../../static/video/zhuijua.png"
									mode=""></image>
							</view>
							<view class="swipers-items-right-item-txt">
								<text class="swipers-items-right-item-txts">
									追剧
								</text>
							</view>
						</view>
						<view class="swipers-items-right-item" v-else>
							<view class="swipers-items-right-item-img" @click.stop="tapfollow(item)">
								<image class="swipers-items-right-item-imgs" src=".../../static/video/zhuijub.png"
									mode=""></image>
							</view>
							<view class="swipers-items-right-item-txt">
								<text class="swipers-items-right-item-txts">
									已追
								</text>
							</view>
						</view>
						<!--#ifndef H5 -->
						<view class="swipers-items-right-item" @click="Share()">
							<view class="swipers-items-right-item-img">
								<image class="swipers-items-right-item-imgs" src="../../static/video/shares.png"
									mode=""></image>
							</view>
							<view class="swipers-items-right-item-txt">
								<text class="swipers-items-right-item-txts">
									分享
								</text>
							</view>
						</view>
						<!--#endif-->
					</view>
					<!-- 底部视频信息 -->
					<view class="swipers-items-btom">
						<view class="swipers-items-btom-box">
							<!-- 标题 -->
							<view class="swipers-items-btom-box-title">
								<text class="swipers-items-btom-box-titles">
									{{item.courseDetailsName}}
								</text>
							</view>
							<!-- 介绍 -->
							<view v-if="item.content" class="swipers-items-btom-box-content">
								<text class="swipers-items-btom-box-contents">{{item.content}}</text>
							</view>
							<!-- 集数 -->
							<view @click="openShow()" class="swipers-items-btom-box-num">
								<text class="swipers-items-btom-box-nums iconfont">
									第{{item.num}}集（共{{meunList.length}}集）选集 &#xe6bd;
								</text>
							</view>
						</view>
					</view>
				</view>

			</swiper-item>
		</swiper>
		<!-- 购买弹窗 -->
		<uni-popup ref="popupPya" :safe-area="false" background-color="rgba(0,0,0,0.2)">
			<view class="pay" style="background-color:rgba(255,255,255,1);border-radius: 30rpx;">
				<view class="list-title">
					<view class="paydata">
						<view style="min-width: 220rpx;">
							<image class="lbpic" :src="data.vod_pic" mode="aspectFill"></image>
						</view>
						<view style="padding: 0 20rpx;">
							<view style="flex-direction: row;">
								<text
									style="background-color:hotpink;padding:6rpx 12rpx;color:#FFF;border-radius: 8rpx;font-size:28rpx">{{data.vod_class}}</text>
								<text class="lbvodname"
									style="color:#000000;font-weight: 700;font-size: 40rpx;padding-left: 5rpx;">{{data.vod_name}}</text>
							</view>

							<view class="swipers-items-btom-box-content" style="width:480rpx;">
								<text class="swipers-items-btom-box-contents"
									style="color:#959595;font-size:28rpx;width: 480rpx;overflow: hidden; text-overflow: ellipsis; lines: 6;">{{data.vod_blurb}}</text>
							</view>

							<view style="margin-top: 10rpx;flex-direction: row;">
								<text style="color:#707070;font-size:28rpx;">本月播放:{{data.vod_hits_month}}</text>
								<text
									style="color:#707070;font-size:28rpx;padding:0 20rpx">总计播放:{{data.vod_hits}}</text>
							</view>
						</view>
					</view>


					<view class="list-title-r" @click="closePay()">
						<image class="list-title-rs" src="" mode=""></image>
					</view>
				</view>
				<view class="pay-content">
					<view class="pay-content-item" @click="payVideo(0)">
						<text class="pay-content-items">
							购买整部视频
						</text>
					</view>
					<view class="pay-content-item" @click="payVideo(1)">
						<text class="pay-content-items">
							购买本集视频
						</text>
					</view>
					<view class="pay-content-item" @click="payvip()" v-if="isVips == 0">
						<text class="pay-content-items">
							开通会员畅享所有收费视频
						</text>
					</view>

				</view>
			</view>
		</uni-popup>
		<!-- 选集弹窗 -->
		<uni-popup ref="popup" :safe-area="false" background-color="rgba(0,0,0,0.1)">
			<view class="list" style="background-color:rgba(255,255,255,1);border-radius: 30rpx;">
				<view class="list-title">
					<view class="list-title-l">
						<image class="list-title-lIcon" :src="data.vod_pic" mode=""></image>
						<text class="list-title-ls" v-if="data!=null">{{data.vod_name}}</text>
					</view>
					<view class="list-title-r" @click="closeList()">
						<image class="list-title-rs" src="../../static/video/gb.png" mode=""></image>
					</view>
				</view>
				<view class="list-content xuanjia">
					<scroll-view scroll-y="true" class="xuanjib" :scroll-into-view="scrollIntoViews">
						<view class="listv">
							<view :id="item.viewInfo" @click="selectPlay(item)"
								v-for="(item,index) in !backnum?meunList:videoList" :key="index"
								:style="('video'+index) == scrollIntoView?'background-color: hotpink;':''"
								class="lists">
								<text class="liststext" :style="('video'+index) == scrollIntoView?'color:#FFFFFF;':''">{{item.vod_Name}}</text>
								<!--<text class="liststext" :style="('video'+index) == scrollIntoView?'color:#FFFFFF;':''">第{{index+1}}集</text>-->
								<text class="tag" v-if="item.isvip==1">付费</text>
								<text v-if="item.ismaile" class="tags">已解锁</text>
								<text v-if="item.isvip==0 && !item.ismaile" class="tagss">免费</text>
							</view>
						</view>
					</scroll-view>

				</view>
			</view>
		</uni-popup>

		<!-- 评论弹窗 -->
		<uni-popup ref="popupcomment" :safe-area="false" background-color="rgba(0,0,0,0.1)">
			<view class="list" style="background-color:rgba(255,255,255,1);border-radius: 30rpx;height: 1100rpx;">
				<view class="list-title">
					<view class="list-title-l">
						<view style="flex-direction: row;flex-wrap: wrap;">
							<text class="list-title-ls">共</text>
							<text class="list-title-ls" style="color: hotpink;">{{commentnum}}</text>
							<text class="list-title-ls">条评论</text>
						</view>
					</view>
					<view class="list-title-r" @click="closecomment()">
						<image class="list-title-rs" src="../../static/video/gb.png" mode=""></image>
					</view>
				</view>


				<view class="list-content xuanjia">
					<scroller scroll-direction="vertical" class="scroller" :scroll-into-view="scrollIntoViews">
						<view style="padding:10rpx 40rpx;margin-top:-20rpx;">
							<view :id="item.viewInfo" v-for="(item,index) in Commentlist" :key="index">
								<view style="display: flex; flex-direction: row;width: 500rpx;margin-top:40rpx;">
									<image style="width: 80rpx;height: 80rpx;border-radius: 100rpx;"
										:src="appurl + item.user.avatar"></image>
									<text
										style="font-size: 28rpx;color:#BBBBBB;margin-top: 10rpx;margin-left: 10rpx;">{{item.user.name}}</text>
								</view>
								<view class="list-content-item-l"
									style="width:750rpx;margin-left:87rpx;margin-top: -30rpx;">
									<text class="commenttime">{{item.time | formatDate}}</text>
									<text
										style="width: 430rpx;font-size: 30rpx;overflow: hidden; text-overflow: ellipsis; lines:5;">{{item.text}}</text>
								</view>
							</view>
						</view>
					</scroller>
				</view>
				<!--输入框-->
				<view class="list-title buttom">
					<view class="list-title-l">
						<input class="textarea" v-model="text" @confirm="addcomments" type="text" confirm-type="send"
							placeholder="输入您想要发表的内容。" />
					</view>
					<text @tap="addcomments" style="font-size: 33rpx;font-weight: 700;padding-right: 20rpx;">发布</text>
				</view>
				<!--输入框-->
			</view>
		</uni-popup>

	</view>
</template>

<script>
	import appShare, {
		closeShare
	} from '../../js_sdk/appShare.js';
	//#ifdef H5
	import SycPlay from '../../js_sdk/player/SycPlay.js';
	import Hls from '../../js_sdk/player/hls.js';
	//#endif
	export default { 
		data() {
			return {
				current: 0,
				maskCustomStyle: {
					background: 'rgba(0, 0, 0, 0.5)'
				},
				show: false,
				videoList: [],
				videoContext: null, //记录当前视频的上下文
				courseId: '',
				meunList: [], //菜单
				meunTop: 37, //返回图标距离顶部的距离
				num: 1, //当前播放的集数
				showPay: false, //购买视频的弹窗
				info: {}, //整部的信息
				courseDetailsId: '', //详情id
				scrollIntoView: '', //当前播放视频的位置
				scrollIntoViews: 'video0', //当前播放视频的位置
				isVips: getApp().$store.state.vip, //会员状态
				rightTop: {
					top: '0rpx'
				},
				backnum: false,
				isfollow: false,
				isdianzan: false,
				data: '',
				Paydata: '',
				text: '',
				Commentlist: [],
				commentnum: 0,
				appurl: getApp().url,
				showtimes: getApp().gettime,
				isplays: false,
				phone_height:0,
				height:uni.getSystemInfoSync().screenHeight,
			};
		},
		
		//#ifdef APP-PLUS-NVUE
		beforeCreate() {
			const domModule = uni.requireNativePlugin('dom')
			domModule.addRule('fontFace', {
				'fontFamily': "myIconfont",
				'src': "url('../../static/font/iconfont.ttf')",
			});
		},
		//#endif
		computed: {
			swiperList() {
				return this.videoList;
			},
			user() {
				return getApp().$store.state.userinfo;
			},
			videoHtml: function() {
					return `<div id="mui-player"></div>`;
				}
		},
		onHide() {
			if (this.videoContext) {
				this.videoContext.stop()
				this.videoContext = null
			}
		},
		onUnload() {
			if (this.videoContext) {
				this.videoContext.stop()
				this.videoContext = null
			}
		},
		onShow() {
			//#ifdef H5
			uni.getStorage({
				key: 'userinfo',
				success: (e) => {
					let sign = this.md5(e.data.token);
					this.GetJson(this.ip + 'userinfo.php', 'POST', {
						token: e.data.token,
						sign: sign
					}, res => {
						if (res.code == 405 || res.userinfo == null || res.userinfo == '') {
							uni.removeStorage({
								key: 'ulogin'
							})
							uni.reLaunch({
								url: '../login/login'
							})
						}
						if (this.isdata(res)) {
							getApp().$store.state.vip = res.vip;
							getApp().$store.state.userinfo = res.userinfo;
							getApp().$store.state.account = res.account;
							getApp().$store.state.userinfo = res.userinfo;
							getApp().$store.state.jupay = res.jupay;
							getApp().$store.state.jufollow = res.jufollow;
							getApp().$store.state.judianzan = res.judianzan;
						}
					})
				}
			})
			//#endif
			uni.$on('back', (data) => {
				this.backnum = true;
				if (data.flag == true) {
					this.closePay()
					this.showPay = false
					this.getDataList(data.id, data.index, true);
				}
			})
		},
		onLoad(e) {
			let that = this
			console.log('高度：',uni.getSystemInfoSync().screenHeight)
			//获取设备的高度
			uni.getSystemInfo({
				success(res) {
					//console.log(uni.getSystemInfoSync().screenHeight)
					//计算右侧操作拦的位置
					//#ifndef H5
					//that.rightTop.top = '800rpx'//950
					//#endif
					//#ifdef H5
					//that.rightTop.top = '850rpx'//850
					that.phone_height = res.windowHeight;
					//#endif
					that.rightTop.top = res.screenHeight - (300 / 2) + 'rpx'
				},
				fail() {
					//如果获取屏幕的高度失败，那么位置默认设置为通用高度630rpx
					that.rightTop.top = '630rpx'

				}
			})
			// 记录跳转过来的视频总id跟单集id
			if (e.id) {
				this.courseId = e.id;
				if (e.courseDetailsId) {
					this.courseDetailsId = e.courseDetailsId;
				}
				this.getDataList(this.courseId, this.courseDetailsId);
			}
           
			//this.getDataList()
		},
		onReady() {
			// #ifdef H5
			
			// #endif
			let json = getApp().$store.state.jufollow;
			for (let i in json) {
				if (json[i].vod_id == this.courseId) {
					this.isfollow = true;
					break;
				}
			}
			let jsons = getApp().$store.state.judianzan;
			for (let i in jsons) {
				if (jsons[i].vod_id == this.courseId) {
					this.isdianzan = true;
					break;
				}
			}
		},
		methods: {
			taplike(item) {
				console.log(item)
				let sign = getApp().md5(getApp().$store.state.userinfo.token + 'isdianzan' + item.courseId);
				getApp().GetJson(getApp().ip + 'Duanju_api.php', 'POST', {
					sign: sign,
					type: 'dianzan',
					token: getApp().$store.state.userinfo.token,
					id: item.courseId,
					is: this.isdianzan ? 'remov' : 'add'
				}, e => {
					//console.log(e)
					if (getApp().isdata(e)) {
						if (this.isdianzan) {
							item.like = Number(item.like) - 1;
							let json = getApp().$store.state.judianzan;
							for (let i in json) {
								if (json[i].vod_id == this.courseId) {
									getApp().$store.state.judianzan.splice(i, 1);
									this.isdianzan = false;
									getApp().showToast('已取消点赞')
									break;
								}
							}
						} else {
							item.like = Number(item.like) + 1;
							this.isdianzan = true;
							getApp().showToast('已点赞')
							getApp().$store.state.judianzan.unshift({
								vod_id: this.courseId
							});
						}
					}
				})

			},
			tapfollow(item) {
				let sign = getApp().md5(getApp().$store.state.userinfo.token + 'isfollow' + item.courseId);
				getApp().GetJson(getApp().ip + 'Duanju_api.php', 'POST', {
					sign: sign,
					type: 'follow',
					token: getApp().$store.state.userinfo.token,
					id: item.courseId,
					is: this.isfollow ? 'remov' : 'add'
				}, e => {

					if (getApp().isdata(e)) {
						if (this.isfollow) {
							let json = getApp().$store.state.jufollow;
							for (let i in json) {
								if (json[i].vod_id == item.courseId) {
									getApp().$store.state.jufollow.splice(i, 1);
									this.isfollow = false;
									getApp().showToast('已移除追剧列表')
									break;
								}
							}
						} else {
							this.isfollow = true;
							getApp().showToast('已加入到追剧列表')
							getApp().$store.state.jufollow.push({
								vod_id: item.courseId,
								data: {
									vod_id: item.courseId,
									vod_name: item.courseDetailsName,
									vod_pic: item.titleImg,
									vod_time_add: item.time,
								}
							});
						}
					}
				})

			},
			Share() {
				let share = this.share;
				console.log(share.sharetext)
				let shareData = {
					shareUrl: getApp().url + '/api/Invitation.php?code=' + this.user.Invitation, //推广网址
					shareTitle: share.sharetitle, //分享的标题  没有微信appid 这里不显示
					shareContent: share.sharetext, //分享的内容
					shareImg: '', //分享的图片 没有微信appid 这里不显示
					appId: "wx89559b6d8eXXXXXXX",
					appPath: "pages/wode/wode",
					appWebUrl: this.url,
				};
				// 调用
				let shareObj = appShare(shareData, res => {
					console.log("分享成功回调", res);
					// 分享成功后关闭弹窗
					// 第一种关闭弹窗的方式
					closeShare();
				});
				//setTimeout(() => {
				// 第二种关闭弹窗的方式
				//shareObj.close();
				//},20000);		  
			},
			//打开评论弹窗
			opencomment(item) {
				//console.log(item)
				this.commentvodid = item.courseId;
				this.commentindex = item.courseDetailsId;
				this.$refs.popupcomment.open('bottom')
			},
			//关闭评论弹窗
			closecomment() {
				this.$refs.popupcomment.close()

			},
			//评论接口
			addcomments() {
				if (this.text == '') {
					getApp().showToast('请输入评论内容！')
				} else {
					let sign = getApp().md5(getApp().$store.state.userinfo.token + 'iscomment' + this.text);
					getApp().GetJson(getApp().ip + 'Duanju_api.php', 'POST', {
						sign: sign,
						type: 'comment',
						token: getApp().$store.state.userinfo.token,
						vod_id: this.commentvodid,
						vod_index: this.commentindex,
						text: this.text
					}, e => {
						if (getApp().isdata(e)) {
							this.commentnum = Number(this.commentnum) + 1;
							//插入刚刚评论的数据到评论列表
							this.Commentlist.unshift({
								vod_id: this.commentvodid,
								vod_index: this.commentindex,
								text: this.text,
								time: parseInt(Date.now().toString().slice(0, -3)),
								user: {
									avatar: getApp().$store.state.userinfo.avatar,
									name: getApp().$store.state.userinfo.name
								},
							});
							this.text = '';

							getApp().showToast('评论成功')
							uni.hideKeyboard();
						}
					})
				}
			},
			//去开通会员接口
			payvip() {
				getApp().showToast('自行开发充值vip功能')
			},
			/**
			 * @param {Object} type 类型 
			 * 1:购买整部视频
			 * 2:购买单集视频
			 */
			payVideo(state) {
				//console.log(this.Paydata.id)
				uni.navigateTo({
					url: 'pay?id=' + this.Paydata.id + '&index=' + this.Paydata.index + '&state=' + state
				})
			},
			//打开购买弹窗
			openPay() {
				this.$refs.popupPya.open('bottom')
			},
			//关闭购买弹窗
			closePay() {
				this.$refs.popupPya.close()
			},
			//选择播放
			selectPlay(item) {
				// 根据选择的courseDetailsId拿到meunList列表中的相同数据的下标
				const index = this.meunList.findIndex(menu => menu.courseDetailsId === item.courseDetailsId);
				// this.videoList = [this.meunList[index]]
				this.current = index
				//重新计算一下当前观看的是哪个视频
				this.comNumVideo()
				// 把选择的视频的自动播放设置为true
				this.videoList[this.current].autoPlay = true
				//让当前选择的视频播放
				this.startPlay(this.current)

				//更新视图
				this.$forceUpdate()
				//关闭选择弹窗
				this.closeList()
				//记录当前播放位置
				this.scrollIntoView = 'video' + index
				//插入历史记录
				this.setHistor(this.videoList[this.current].courseId, this.videoList[this.current]
					.courseDetailsId)
			},
			//选集
			openShow() {
				this.scrollIntoViews = 'video0'
				this.comNumVideo()
				this.openList()
				this.$nextTick(() => {
					this.scrollIntoViews = this.scrollIntoView
				})

			},
			//打开选集弹窗
			openList() {
				this.$refs.popup.open('bottom')
			},
			//关闭选集弹窗
			closeList() {
				this.$refs.popup.close()
			},

			ended() {
				if (this.current < this.videoList.length - 1) {
					this.current += 1
				}
			},
			//swiper上下切换事件
			change(e) {
				
				this.m3u8_pic = this.data.vod_pic
				console.log(this.videoList[(Number(this.current) + 1)].videoUrl)
				console.log(e.detail.current)
				getApp().showToast(e.detail.current)
				//拿出当前的swiper索引
				//优化后的滑动
				let current = Number(e.detail.current);
				// 根据courseDetailsId在meunList中找到这个数据的下标
				let indexs = -1;
				//考虑向上滑动的时候
				if (current == 2 && this.current == 0) {
					//向上滑到头的时候先拿第一条数据的courseDetailsId
					let courseDetailsId = this.videoList[0].courseDetailsId;
					indexs = this.meunList.findIndex(item => item.courseDetailsId === courseDetailsId);
					if (indexs != -1) { //找到了，indexs就是对应下标
						//先判断meunList数组剩下的元素是否够三条
						const lengths = (this.meunList.slice(0, indexs)).length;
						if (lengths >= 3) { //够三条
							// 因为轮播图开启了首尾衔接,所以在滑动到尾部重新进入第一页之前替换全部数据为之前的三条
							//因为slice(str,end)，包含str，不包含end，所以拿三条数据则-3
							this.videoList = this.meunList.slice(indexs - 3, indexs);
						} else { //不够三条
							let arr = new Array(3);
							switch (lengths) {
								//只有一条
								case 1:
									//只有一条的时候需要给数组补两条凑够三条，把meunList数组的前两条拿出来补在后面
									arr[2] = this.meunList[indexs - 1]; //把剩下的一条取出来放到要滑动的那一页
									//因为剩下的数据不够了，则拿meunList末尾的两条数据补齐
									//第二个用最后一条数据
									arr[1] = this.meunList[this.meunList.length - 1];
									//第一个用倒数第二条数据
									arr[0] = this.meunList[this.meunList.length - 2];
									//赋值
									this.videoList = arr;
									break;
									//只有二条
								case 2:
									//还剩下两条数据的时候
									//把剩下的倒数第一条取出来放到要滑动的那一页
									arr[2] = this.meunList[indexs - 1];
									//把剩下的最后一条放到第二个元素
									arr[1] = this.meunList[indexs - 2];
									//最后一个元素则由meunList的最后一条补齐
									arr[0] = this.meunList[this.meunList.length - 1];
									//最后赋值
									this.videoList = arr;
									break;
								default:
									//一条都没有的时候 [1,2,3,4,5,6]
									//直接把meunList末尾的三条放入数组即可
									this.videoList = this.meunList.slice(-3);
									break;
							}
						}
					}
				}
				//考虑向下滑动
				if (current == 0 && this.current == 2) { //是否滑动到第一条，虽然刚进入页面current为0，但是首次不触发
					//拿出当前的courseDetailsId
					let courseDetailsId = this.videoList[2].courseDetailsId;
					indexs = this.meunList.findIndex(item => item.courseDetailsId === courseDetailsId);
					//记录当前数据在meunList中的下标
					if (indexs != -1) { //找到了，indexs就是对应下标
						//先判断meunList数组剩下的元素是否够三条
						const lengths = (this.meunList.slice(indexs + 1, this.meunList.length)).length;
						if (lengths >= 3) { //够三条
							// 因为轮播图开启了首尾衔接,所以在滑动到尾部重新进入第一页之前替换全部数据为之后的三条
							this.videoList = this.meunList.slice(indexs + 1, indexs + 4);
						} else { //不够三条
							let arr = new Array(3);
							switch (lengths) {
								//只有一条
								case 1:
									//只有一条的时候需要给数组补两条凑够三条，把meunList数组的前两条拿出来补在后面
									arr[0] = this.meunList[indexs + 1];
									arr[1] = this.meunList[0];
									arr[2] = this.meunList[1];
									this.videoList = arr;
									break;
								case 2:
									//只有二条
									arr[0] = this.meunList[indexs + 1];
									arr[1] = this.meunList[indexs + 2];
									arr[2] = this.meunList[0];
									this.videoList = arr;
									break;
								default:
									//刚好没有数据了 直接拿meunList的前三条数据
									this.videoList = this.meunList.slice(0, 3);
									break;
							}
						}
					}
				}

				//获取当前播放的视频在菜单数组中的位置
				let scrollIndex = this.meunList.findIndex(ite => ite.courseDetailsId == this.videoList[current]
					.courseDetailsId);
				//记录当前播放位置
				this.scrollIntoView = 'video' + scrollIndex;
				//控制播放
				this.startPlay(current);
				//设置轮播图索引
				this.current = current;
				//插入历史记录 //获取评论内容
				this.setHistor(this.videoList[this.current].courseId, this.videoList[this.current].courseDetailsId);
				this.getcomment(this.videoList[this.current].courseId, this.videoList[this.current].courseDetailsId);
				this.Paydata = {
					id: this.videoList[this.current].courseId,
					index: this.videoList[this.current].courseDetailsId
				}
				let julist = getApp().$store.state.jupay;
				for (let i in julist) {
					if (julist[i].vod_id == this.courseId && julist[i].state == 1 && julist[i].vod_index == this.current) {
						this.videoList[this.current].isvip = 0;
						this.videoList[this.current].ismaile = true;
						//console.log(this.videoList[this.current].isvip)
						break;
					}
				}
				if (getApp().$store.state.vip == 1) {
					this.videoList[this.current].isvip = 0;
					this.videoList[this.current].ismaile = true;
				}
				
				//#ifdef H5
				this.m3u8_url = this.videoList[this.current].videoUrl
				setTimeout( () => {this.h5play()}, 300);
				//#endif
			},
			//控制播放
			startPlay(current) {
				if (this.videoContext) { //判断之前是否有视频的上下文
					this.videoContext.stop();
					this.videoContext = null;
				}
				let numIdCurr = this.videoList[current].courseDetailsId;
				if (this.videoList[current].isvip == 0) { //已经购买可直接播放
					// 播放时记录当前播放的id
					this.videoContextId = 'myVideo' + numIdCurr;
					this.videoContext = uni.createVideoContext(this.videoContextId, this);

					this.$nextTick(() => {
						this.videoContext.play();
					})
				} else if (this.videoList[current].isvip == 1) {
					let julist = getApp().$store.state.jupay;
					for (let i in julist) {
						if (julist[i].vod_id == this.videoList[current].courseId && julist[i].state == 1 && julist[i]
							.vod_index == this.videoList[current].courseDetailsId) {
							this.videoList[this.current].isvip = 0;
							this.videoList[this.current].ismaile = true;
							this.videoContextId = 'myVideo' + this.videoList[current].courseDetailsId;
							this.videoContext = uni.createVideoContext(this.videoContextId, this);
							this.$nextTick(() => {
								this.videoContext.play();
							})
							break;
						} else if (julist[i].vod_id == this.videoList[current].courseId && julist[i].state == 0) {
							this.videoList[this.current].isvip = 0;
							this.videoList[this.current].ismaile = true;
							this.videoContextId = 'myVideo' + this.videoList[current].courseDetailsId;
							this.videoContext = uni.createVideoContext(this.videoContextId, this);
							this.$nextTick(() => {
								this.videoContext.play();
							})
							break;
						} else {
							this.openPay()
						}
					}
				} else {
					///
				}
				this.$forceUpdate();
			},
			//返回
			goBack() {
				uni.navigateBack();
			},
			/**
			 * @param {Number} courseId 总id
			 * @param {Number} courseDetailsId 当前视频id
			 * @param {boolean} type 是购买后返回的还是直接进来的
			 */
			getDataList(courseId, courseDetailsId, type) {
				let promise = new Promise((resolve, reject) => {
					getApp().GetJson(getApp().ip + 'Duanju_api.php', 'POST', {
						type: 'getvod',
						id: courseId
					}, e => {
						this.data = e.data;
						console.log(e)
						this.share = e.share;
						//#ifdef H5
						this.m3u8_url = e.list[0].url
						this.m3u8_pic = e.data.vod_pic
						setTimeout( () => {this.h5play()}, 300);
						//#endif
						if (e.list.length == 0) {
							uni.navigateBack();
							uni.showToast({
								icon: 'none',
								title: '暂无视频'
							})
						} else {
							let videoGroup = [];
							let data = e.data;
							for (let item of e.list) {
								videoGroup.push({
									courseId: data.vod_id, //视频id
									courseDetailsId: item.id, //当前视频id
									courseDetailsName: item.title, //视频标题
									content: item.text, //视频简介
									isGood: 0, //是否点赞 1:点赞 0:未点赞//弃用
									isCollect: 0, //是否追剧 1:已追 0:未追//弃用
									like: item.like, //点赞数量
									vod_Name: item.name,
									videoUrl: item.url,
									titleImg: data.vod_pic,
									isvip: item.vip,
									time: data.vod_time_add,
									typeid: data.type_id,
									ismaile: false
								});
							}
							let videoList = [...this.videoList, ...videoGroup];
							this.vodname = this.data.vod_name;
							//console.log(videoList)
							const indexs = videoList.findIndex(menu => menu.courseDetailsId === Number(
								courseDetailsId));
							this.current = indexs
							this.scrollIntoView = 'video' + indexs
							videoList.map((item, index) => {

								item.num = index + 1;
								if (item.videoUrl) {
									item.autoPlay = false;
								} else {
									item.autoPlay = false;
								}
								item.viewInfo = 'video' + index;
								if (getApp().$store.state.vip == 1) {
									item.isvip = 0;
									item.ismaile = true;
									//console.log(item.ismaile)
								}
								let julist = getApp().$store.state.jupay;
								for (let i in julist) {
									if (julist[i].vod_id == item.courseId && julist[i].state ==
										0) {
										item.isvip = 0;
										item.ismaile = true
										console.log(videoList[this.current].ismaile + '+' + item
											.ismaile)
										break;
									}
									if (julist[i].vod_id == item.courseId && julist[i].state ==
										1 && julist[i].vod_index == item.courseDetailsId) {
										item.isvip = 0;
										item.ismaile = true
										//console.log(videoList[this.current].isvip)
										break;
									}
									if (getApp().$store.state.vip == 1) {
										videoList[this.current].isvip = 0;
										videoList[this.current].ismaile = true;
									}
								}
								getApp().GetJson(getApp().ip + 'Duanju_api.php', 'POST', {
									token: getApp().$store.state.userinfo.token,
									type: 'get_comment',
									vod_id: this.courseId,
									vod_index: this.current
								}, e => {
									//console.log(e)
									this.Commentlist = e.commentlist;
									this.commentnum = e.num;
								})
							});
							//菜单数组
							this.meunList = videoList;
							//console.log(this.meunList)
							if (type == true) { //购买视频后返回的
								let courseDetailsIds = this.videoList[this.current].courseDetailsId;
								this.meunList.some((item) => {
									if (item.courseDetailsId == courseDetailsIds) {
										this.videoList[this.current].isvip = 0;
										this.videoList[this.current].autoPlay = true;
										this.videoList[this.current].ismaile = true;
									}
									return true;
								})
							} else { //直接跳转进来的
								this.videoList = this.meunList
								this.$nextTick(() => {
									this.current = indexs
									if (this.videoList[indexs].isvip == 0) {
										let numIdCurr = this.videoList[indexs].courseDetailsId;
										this.videoContextId = 'myVideo' + numIdCurr;
										this.videoContext = uni.createVideoContext(this
											.videoContextId,
											this);
										this.videoContext.play();
									} else {
										this.openPay()
									}
									this.$forceUpdate()
								})
							}
							this.$forceUpdate();
							//插入历史记录
							this.setHistor(this.videoList[this.current].courseId, this.videoList[this
								.current].courseDetailsId);
							this.Paydata = {
								id: this.videoList[this.current].courseId,
								index: this.videoList[this.current].courseDetailsId
							}
							resolve();
						}
					})
				});
				return promise;
			},
			h5play() {
				var that = this;
				var player = new SycPlay({
					container: document.getElementById("SycPlayer"),
					autoplay: true, //自动播放
					airplay: false,
					loop: true, //循环播放 默认false
					height:uni.getSystemInfoSync().screenHeight, //高度px
					video: {
						url:that.m3u8_url, //视频url
						pic:that.m3u8_pic,
						type: 'customHls',
                        customType: {
                            customHls: function (video, player) {
                                const hls = new Hls();
                                hls.loadSource(video.src);
                                hls.attachMedia(video);
                            },
                        },
					},
				});
			},
			//计算正在观看哪个视频
			comNumVideo() {
				let courseDetailsId = this.videoList[this.current].courseDetailsId;
				this.meunList.map((item, index) => {
					if (item.courseDetailsId == courseDetailsId) { //找到了
						this.num = item.num;
					}
				})
			},
			//插入观看记录
			setHistor(courseId, courseDetailsId) {
				//console.log(courseId+'+'+ courseDetailsId)
				//调用接口记录观看历史
				getApp().GetJson(getApp().ip + 'Duanju_api.php', 'POST', {
					token: getApp().$store.state.userinfo.token,
					type: 'record',
					vod_id: courseId,
					vod_index: courseDetailsId
				}, e => {
					//console.log(e) //不需要
				})
			},
			getcomment(courseId, courseDetailsId) {
				getApp().GetJson(getApp().ip + 'Duanju_api.php', 'POST', {
					token: getApp().$store.state.userinfo.token,
					type: 'get_comment',
					vod_id: courseId,
					vod_index: courseDetailsId
				}, e => {
					//console.log(e)
					this.Commentlist = e.commentlist;
					this.commentnum = e.num;

				})
			}
		},
		filters: {
			//将时间转换成几天前，几个月前，几小时前等
			formatDate: function(datetime) {
				var dateTimeStamp = datetime * 1000;
				var minute = 1000 * 60; //把分，时，天，周，半个月，一个月用毫秒表示
				var hour = minute * 60;
				var day = hour * 24;
				var week = day * 7;
				var halfamonth = day * 15;
				var month = day * 30;
				var now = new Date().getTime(); //获取当前时间毫秒
				var diffValue = now - dateTimeStamp; //时间差

				if (diffValue < 0) {
					console.log("diffValue<0", datetime, dateTimeStamp, now, diffValue);
					return '刚刚';
				}
				var minC = diffValue / minute; //计算时间差的分，时，天，周，月
				var hourC = diffValue / hour;
				var dayC = diffValue / day;
				var weekC = diffValue / week;
				var monthC = diffValue / month;
				var result = "2";
				if (monthC >= 1 && monthC <= 3) {
					result = " " + parseInt(monthC) + "月前"
				} else if (weekC >= 1 && weekC <= 3) {
					result = " " + parseInt(weekC) + "周前"
				} else if (dayC >= 1 && dayC <= 6) {
					result = " " + parseInt(dayC) + "天前"
				} else if (hourC >= 1 && hourC <= 23) {
					result = " " + parseInt(hourC) + "小时前"
				} else if (minC >= 1 && minC <= 59) {
					result = " " + parseInt(minC) + "分钟前"
				} else if (diffValue >= 0 && diffValue <= minute) {
					result = "刚刚"
				} else {
					var datetime = new Date();
					datetime.setTime(dateTimeStamp);
					var Nyear = datetime.getFullYear(); {}
					var Nmonth = datetime.getMonth() + 1 < 10 ? "0" + (datetime.getMonth() + 1) : datetime.getMonth() +
						1;
					var Ndate = datetime.getDate() < 10 ? "0" + datetime.getDate() : datetime.getDate();
					var Nhour = datetime.getHours() < 10 ? "0" + datetime.getHours() : datetime.getHours();
					var Nminute = datetime.getMinutes() < 10 ? "0" + datetime.getMinutes() : datetime.getMinutes();
					var Nsecond = datetime.getSeconds() < 10 ? "0" + datetime.getSeconds() : datetime.getSeconds();
					result = Nyear + "-" + Nmonth + "-" + Ndate
				}
				return result;
			}

		},
	}
</script>

<style>
	page{
		background-color: #111111;
	}
	.iconfont {
		font-family: myIconfont;
	}
    .video {
        width:100%;
    }
	.listv {
		flex-direction: row;
		flex-wrap: wrap;
		padding-left: 30rpx;
		margin-top: 10rpx;
		position: relative;
	}

	.title {
		background-color: #F4F3F3;
		padding: 15rpx 60rpx;
		border-radius: 50rpx;
		color: #636363;
		font-size: 23rpx;
		font-weight: 500;
		margin-bottom: 10rpx;
	}

	.lists {
		width: 150rpx;
		padding: 15rpx 20rpx;
		border-radius: 5rpx;
		margin: 0 30rpx 20rpx 0;
		border: 1rpx solid #F5F5F5;
		background-color: #F5F5F5;
		color: #A1A1A2;
		/*align-items: center;*/
		transition: opacity 0.3s;
	}

	.buttom {
		z-index: 1;
		position: fixed;
		bottom: 20rpx;
		left: 0;
		right: 0;
		padding: 8rpx;

	}

	.commentlistv {
		flex-direction: row;
		flex-wrap: wrap;
		margin-top: 10rpx;
		position: relative;
	}

	.commentlist {
		margin-top: -10rpx;
		width: 590rpx;
		padding: 15rpx 15rpx;
		border-radius: 5rpx;
		color: #A1A1A2;
		transition: opacity 0.3s;
	}

	.commenttime {
		border-radius: 15rpx 0 15rpx 0;
		font-size: 28rpx;
		color: #BBBBBB;
		text-align: center;
		position: absolute;
		/* #ifdef APP-PLUS */
		right: 100%;
		/* #endif */
		/* #ifdef H5 */
		right: 30%;
		/* #endif */
		z-index: 10;
	}

	.xuanjiimg {
		width: 35rpx;
		height: 35rpx;
		/*#ifdef APP-PLUS*/
		top: -3rpx;
		/*#endif*/
		/*#ifdef H5*/
		top: 0;
		/*#endif*/

	}

	.xuanjia {
		/*#ifdef H5*/
		height: 100%;
		/*#endif*/
	}

	.xuanjib {
		/*#ifdef H5*/
		height: 100%;
		/*#endif*/
	}

	.textarea {
		margin: 10rpx;
		width: 580rpx;
		height: 80rpx;
		border-radius: 20rpx;
		color: #000;
		background-color: #F8F8F8;
		font-size: 35rpx;
		padding: 18rpx;
	}

	.liststext {
		font-size: 26rpx;
		color: #A1A1A2;

	}

	.scroller {
		flex: 1;
	}

	.paydata {
		flex-direction: row;
		margin-top: 60rpx;
		position: relative;
	}

	.paydatas {
		width: 150rpx;
		margin: 0 30rpx 30rpx 0;
		align-items: center;
		transition: opacity 0.3s;
	}

	.lbblurb {
		font-size: 25rpx;
		margin-top: 10rpx;
		flex: 1;
		overflow: hidden;
		text-overflow: ellipsis;
		opacity: .7;
	}

	.lbvodname {
		color: #FFF;
		overflow: hidden;
		text-overflow: ellipsis;
		lines: 2;
	}

	.lbpic {
		border-radius: 9rpx;
		width: 220rpx;
		height: 300rpx;
	}

	.tag {
		border-radius: 15rpx 0 15rpx 0;
		background-color: #ff3565;
		margin-top: 15rpx;
		color: #FFF;
		text-align: center;
		position: absolute;
		/*#ifdef H5*/
		left: 62%;
		/*#endif*/
		/*#ifdef APP-PLUS-NVUE*/
		left: 45%;
		/*#endif*/
		z-index: 10;
		margin-top: -15rpx;
		font-size: 20rpx;
		padding: 5rpx 10rpx;
	}

	.tags {
		border-radius: 15rpx 0 15rpx 0;
		background-color: #1FC263;
		margin-top: 15rpx;
		color: #FFF;
		text-align: center;
		position: absolute;
		/*#ifdef H5*/
		left: 62%;
		/*#endif*/
		/*#ifdef APP-PLUS-NVUE*/
		left: 45%;
		/*#endif*/
		z-index: 10;
		margin-top: -15rpx;
		font-size: 15rpx;
		padding: 10rpx 5rpx;
	}

	.tagss {
		border-radius: 15rpx 0 15rpx 0;
		background-color: #48B2FE;
		margin-top: 15rpx;
		color: #FFF;
		text-align: center;
		position: absolute;
		/*#ifdef H5*/
		left: 62%;
		/*#endif*/
		/*#ifdef APP-PLUS-NVUE*/
		left: 45%;
		/*#endif*/
		z-index: 10;
		margin-top: -15rpx;
		font-size: 20rpx;
		padding: 5rpx 10rpx;
	}

	.detail {
		width: 750rpx;
		flex: 1;
		background-color: #000;
	}

	.swipers {
		width: 750rpx;
		/*#ifdef APP-PLUS */
		flex: 1;
		/*#endif*/
		
		/*#ifdef H5*/
		height: 100vh;
		/*#endif*/
	}

	.swipers-item {
		width: 750rpx;
		flex: 1;
		/*#ifdef H5*/
		height: 100%;
		/*#endif*/
	}

	.swipers-items {
		width: 750rpx;
		/*#ifdef H5*/
		height: 100%;
		/*#endif*/
		flex: 1;
		position: relative;
		background-color: #000;
	}

	.swipers-items-video {
		width: 750rpx;
		/*#ifdef H5*/
		height: 100%;
		/*#endif*/
		flex: 1;
	}

	.swipers-items-imgsbg {
		width: 100%;
		/*#ifdef H5*/
		height: 100%;
		/*#endif*/
		flex: 1;
	}

	.swipers-items-back {
		position: absolute;
		left:0;
		/*#ifdef H5*/
		top: 10rpx;
		/*#endif*/
		/*#ifdef APP-PLUS-NVUE*/
		top: 120rpx;
		/*#endif*/
		width: 50rpx;
		height: 50rpx;
		z-index: 999;
	}

	.swipers-items-right {
		position: absolute;
		width: 60rpx;
		top: 100rpx;
		right: 20rpx;
	}

	.swipers-items-right-item {
		width: 60rpx;
		margin-bottom: 40rpx;
	}

	.swipers-items-right-item-img {
		width: 60rpx;
		height: 60rpx;
	}

	.swipers-items-right-item-imgs {
		width: 60rpx;
		height: 60rpx;
	}

	.swipers-items-right-item-txt {
		width: 60rpx;
	}

	.swipers-items-right-item-txts {
		width: 60rpx;
		color: #ffffff;
		font-size: 24rpx;
		text-align: center;
	}

	.swipers-items-btom {
		/*#ifdef H5*/
		bottom: 150rpx;
		/*#endif*/
		/*#ifdef APP-PLUS-NVUE*/
		bottom: 95rpx;
		/*#endif*/
		width: 750rpx;
		position: absolute;
		align-items: center;
	}

	.swipers-items-btom-box {
		width: 710rpx;
	}

	.swipers-items-btom-box-title {
		width: 710rpx;
	}

	.swipers-items-btom-box-titles {
		width: 710rpx;
		color: #ffffff;
		font-size: 30rpx;
	}

	.swipers-items-btom-box-content {
		width: 710rpx;
		margin-top: 10rpx;
	}

	.swipers-items-btom-box-contents {
		color: #ffffff;
		font-size: 28rpx;
	}

	.swipers-items-btom-box-num {
		width: 710rpx;
		margin-top: 20rpx;
	}

	.swipers-items-btom-box-nums {
		color: #ffffff;
		font-size: 30rpx;
	}

	.list {
		width: 750rpx;
		align-items: center;

	}

	.list-title {
		width: 710rpx;
		margin-top: 30rpx;
		flex-direction: row;
		align-items: center;
		justify-content: space-between;
	}

	.list-title-l {
		flex-direction: row;
		align-items: center;
	}

	.list-title-lIcon {
		width: 70rpx;
		height: 70rpx;
		border-radius: 6rpx;
	}

	.list-title-ls {
		margin-left: 15rpx;
		color: #000000;
		font-size: 32rpx;
		font-weight: bold;
	}

	.list-title-r {
		width: 40rpx;
		height: 40rpx;
	}

	.list-title-rs {
		width: 30rpx;
		height: 30rpx;
	}

	.list-content {
		width: 750rpx;
		height: 900rpx;
		margin-bottom: 40rpx;
		margin-top: 20rpx;
	}


	.list-content-item {
		width: 710rpx;
		margin-bottom: 20rpx;
		flex-direction: row;
		justify-content: space-between;
	}

	.list-content-item-rs {
		font-weight: 400;
		font-size: 12px;
		color: #5074ff;
	}

	.list-content-item-l {
		flex-direction: row;

	}

	.list-content-item-ls {
		width: 140rpx;
		height: 160rpx;
		border-radius: 10rpx;
	}

	.list-content-item-l-c {
		width: 400rpx;
		margin-left: 20rpx;
	}

	.list-content-item-l-c-num {}

	.list-content-item-l-c-nums {
		color: #000000;
		font-size: 32rpx;
		font-weight: bold;
	}

	.list-content-item-l-c-title {
		margin-top: 10rpx;
	}

	.list-content-item-l-c-titles {
		color: #000000;
		font-size: 32rpx;

	}

	.list-content-item-l-c-content {
		margin-top: 10rpx;
	}

	.list-content-item-l-c-contents {
		color: #000000;
		font-size: 30rpx;
	}

	.pay {
		width: 750rpx;
		align-items: center;
	}

	.list-title-lss {
		color: #FFF;
		font-size: 32rpx;
		font-weight: bold;
		margin-left: 15rpx;
	}

	.pay-content {
		width: 710rpx;
		margin-top: 40rpx;
		margin-bottom: 40rpx;
	}

	.pay-content-item {
		width: 710rpx;
		height: 92rpx;
		border-radius: 20rpx;
		background-color: hotpink;
		margin-bottom: 40rpx;
		flex-direction: row;
		align-items: center;
		justify-content: center;
	}

	.pay-content-items {
		color: #FFF;
		font-size: 28rpx;
		font-weight: bold;
	}
	  .video-js{ /* 给.video-js设置字体大小以统一各浏览器样式表现，因为video.js采用的是em单位 */
	  font-size: 14px;
	}
	.video-js button{
	  outline: none;
	}
	.video-js.vjs-fluid,
	.video-js.vjs-16-9,
	.video-js.vjs-4-3{ /* 视频占满容器高度 */
	  height: 100%;
	  background-color: #161616;
	}
	.vjs-poster{
	  background-color: #161616;
	}
	.video-js .vjs-big-play-button{ /* 中间大的播放按钮 */
	  font-size: 2.5em;
	  line-height: 2.3em;
	  height: 2.5em;
	  width: 2.5em;
	  -webkit-border-radius: 2.5em;
	  -moz-border-radius: 2.5em;
	  border-radius: 2.5em;
	  background-color: rgba(115,133,159,.5);
	  border-width: 0.12em;
	  margin-top: -1.25em;
	  margin-left: -1.75em;
	}
	.video-js.vjs-paused .vjs-big-play-button{ /* 视频暂停时显示播放按钮 */
	  display: block;
	}
	.video-js.vjs-error .vjs-big-play-button{ /* 视频加载出错时隐藏播放按钮 */
	  display: none;
	}
	.vjs-loading-spinner { /* 加载圆圈 */
	  font-size: 2.5em;
	  width: 2em;
	  height: 2em;
	  border-radius: 1em;
	  margin-top: -1em;
	  margin-left: -1.5em;
	}
	.video-js .vjs-control-bar{ /* 控制条默认显示 */
	  display: flex;
	}
	.video-js .vjs-time-control{display:block;}
	.video-js .vjs-remaining-time{display: none;}
	
	.vjs-button > .vjs-icon-placeholder:before{ /* 控制条所有图标，图标字体大小最好使用px单位，如果使用em，各浏览器表现可能会不大一样 */
	  font-size: 22px;
	  line-height: 1.9;
	}
	.video-js .vjs-playback-rate .vjs-playback-rate-value{
	  line-height: 2.4;
	  font-size: 18px;
	}
	/* 进度条背景色 */
	.video-js .vjs-play-progress{
	  color: #ffb845;
	  background-color: #ffb845;
	}
	.video-js .vjs-progress-control .vjs-mouse-display{
	  background-color: #ffb845;
	}
	.vjs-mouse-display .vjs-time-tooltip{
	  padding-bottom: 6px;
	  background-color: #ffb845;
	}
	.video-js .vjs-play-progress .vjs-time-tooltip{
	  display: none!important;
	}
</style>